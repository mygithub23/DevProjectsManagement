{"version":3,"file":"main.bundle.js","sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/App.js","webpack:///./src/components/AddProject.js","webpack:///./src/components/ContactPage.js","webpack:///./src/components/DeveloperItemPage.js","webpack:///./src/components/DeveloperPage.js","webpack:///./src/components/Header.js","webpack:///./src/components/HomePage.js","webpack:///./src/components/NotFoundPage.js","webpack:///./src/components/Project.js","webpack:///./src/components/ProjectItemPage.js","webpack:///./src/components/ProjectList.js","webpack:///./src/components/ProjectPage.js","webpack:///./src/components/StackItemPage.js","webpack:///./src/components/StackPage.js","webpack:///./src/index.js","webpack:///./src/routers/AppRouter.js"],"sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport ProjectsList from './components/ProjectList';\r\nimport AddProject from './components/AddProject';\r\n// import './App.css';\r\n\r\nfunction App() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchProjectsHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/projects');\r\n      if (!response.ok) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('++++++++++++++++++++ my Data >>>>>>>>>>>>>>>>> ', data)\r\n\r\n      const transformedProjects = data.map((projectData) => {\r\n        return {\r\n            \r\n          id: projectData._id,\r\n          projectName: projectData.name,\r\n          stackName: projectData.tech_stack.name,\r\n          count: projectData.tech_stack.count,\r\n          developerName: projectData.developers.name\r\n        };\r\n      });\r\n      setProjects(transformedProjects);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProjectsHandler();\r\n  }, [fetchProjectsHandler]);\r\n\r\n  function addProjectHandler(project) {\r\n    console.log(project);\r\n  }\r\n\r\n  let content = <p>Found no projects.</p>;\r\n\r\n  if (projects.length > 0) {\r\n    content = <ProjectsList projects={projects} />;\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <AddProject onAddProject={addProjectHandler} />\r\n      </section>\r\n      <section>\r\n        <button onClick={fetchProjectsHandler}>Fetch Projects</button>\r\n      </section>\r\n      <section>{content}</section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useRef } from 'react';\n\n// import classes from './AddProject.module.css';\n\nfunction AddProject(props) {\n  const NameRef = useRef('');\n\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const project = {\n      name: nameRef.current.value,\n    };\n\n    props.onAddProject(project);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      {/* <div className={classes.control}> */}\n      <div>\n        <label htmlFor='name'>Name</label>\n        <input type='text' id='name' ref={NameRef} />\n      </div>      \n      <button>Add Project</button>\n    </form>\n  );\n}\n\nexport default AddProject;\n","import React from 'react';\n\nconst ContactPage = () => (\n  <div>\n    <h1>Contact Me</h1>\n    <p>Contact PM.cls@xyz.com</p>\n  </div>\n);\n\nexport default ContactPage;\n","import React from 'react';\r\n\r\nconst DeveloperItem = (props) => (\r\n  <div>\r\n    <h1>Developer detail page</h1>\r\n    <p>This page is for the developer with the id of {props.match.params.id}</p>\r\n  </div>\r\n);\r\n\r\nexport default DeveloperItem;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DeveloperPage = () => (\r\n  <div>\r\n    <h1>Developer LIST</h1>\r\n    <p>List of Active Developers - Here display some kind Developer report</p>\r\n    <p>User can sort, filter and on record click it will show clicked record detail</p>\r\n    <Link to=\"/developer/1\"> ---- Project One ---- </Link>\r\n    <Link to=\"/developer/2\"> ---- Project Two ---- </Link>\r\n  </div>\r\n);\r\n\r\nexport default DeveloperPage;\r\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <header>\n    <h1>This is the header</h1>\n    <NavLink to=\"/\" activeClassName=\"is-active\" exact={true}>Home</NavLink>\n    <NavLink to=\"/manage\" activeClassName=\"is-active\" exact={true}> ----- Manage ----- </NavLink>\n    <NavLink to=\"/project\" activeClassName=\"is-active\" exact={true}> ----- Project ----- </NavLink>\n    <NavLink to=\"/developer\" activeClassName=\"is-active\" exact={true}> ----- Developer ----- </NavLink>\n    <NavLink to=\"/stack\" activeClassName=\"is-active\" exact={true}> ----- Technology Stacks ----- </NavLink>\n    <NavLink to=\"/contact\" activeClassName=\"is-active\"> ----- Contact ----- </NavLink>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst HomePage = () => (\n  <div>\n    <h1>Welcome To HOME PAGE</h1>\n    <p> I AM VISITING HOME PAGE NOW!</p>\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\r\n\r\n// import classes from './Project.module.css';\r\n\r\nconst Project = (props) => {\r\n  return (\r\n    // <li className={classes.project}>\r\n    <li>\r\n      <h2>{props.projectName}</h2>\r\n      <h3>{props.stackName}</h3>\r\n      <p>{props.count}</p>\r\n      <h3>{props.developerName}</h3>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from 'react';\n\nconst ProjectItem = (props) => (\n  <div>\n    <h1>Project detail page</h1>\n    <p>This page is for the project with the id of {props.match.params.id}</p>\n  </div>\n);\n\nexport default ProjectItem;\n","import React from 'react';\r\n\r\nimport Project from './Project';\r\n// import classes from './ProjectsList.module.css';\r\n\r\nconst ProjectList = (props) => {\r\n  return (\r\n    // <ul className={classes['projects-list']}>\r\n    <ul>\r\n      {props.projects.map((project) => (\r\n        <Project\r\n          key={project.id}\r\n          projName={project.projectName}\r\n          stackName={project.stackName}\r\n          count={project.count}\r\n          developerName={project.developerName}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProjectPage = () => (\n  <div>\n    <h1>PROJECT LIST</h1>\n    <p>List of Active Projects - Here display some kind project report</p>\n    <p>User can sort, filter and on record click it will show clicked record detail</p>\n    <Link to=\"/project/1\"> ---- Project One ---- </Link>\n    <Link to=\"/project/2\"> ---- Project Two ---- </Link>\n  </div>\n);\n\nexport default ProjectPage;\n","import React from 'react';\n\nconst stackItem = (props) => (\n  <div>\n    <h1>stack detail page</h1>\n    <p>This page is for the stack with the id of {props.match.params.id}</p>\n  </div>\n);\n\nexport default stackItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst StackPage = () => (\n  <div>\n    <h1>STACKS LIST</h1>\n    <p>List of Active Stacks - Here display some kind stack report</p>\n    <p>User can sort, filter and on record click it will show clicked record detail</p>\n    <Link to=\"/stack/1\"> ---- Stack One ---- </Link>\n    <Link to=\"/stack/2\"> ---- Stack Two ---- </Link>\n  </div>\n);\n\nexport default StackPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\n\n// import 'normalize.css/normalize.css';\n//import './styles/styles.scss';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));","import React from 'react';\nimport { BrowserRouter, Route, Switch, Link, NavLink } from 'react-router-dom';\nimport NotFoundPage from '../components/NotFoundPage';\nimport Header from '../components/Header';\nimport HomePage from '../components/HomePage';\nimport ContactPage from '../components/ContactPage';\nimport ProjectItemPage from '../components/ProjectItemPage';\nimport ProjectPage from '../components/ProjectPage';\nimport App from '../App';\nimport DeveloperPage from '../components/DeveloperPage';\nimport DeveloperItemPage from '../components/DeveloperItemPage';\nimport StackPage from '../components/StackPage';\nimport StackItemPage from '../components/StackItemPage';\n\n\n\n\nconst AppRouter = () => (\n  <BrowserRouter>\n    <div>\n      <Header />\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact={true} />\n        <Route path=\"/manage\" component={App}  />\n        <Route path=\"/project\" component={ProjectPage} exact={true} />\n        <Route path=\"/project/:id\" component={ProjectItemPage} />\n        <Route path=\"/developer\" component={DeveloperPage} exact={true} />\n        <Route path=\"/developer/:id\" component={DeveloperItemPage} />\n        <Route path=\"/stack\" component={StackPage} exact={true} />\n        <Route path=\"/stack/:id\" component={StackItemPage} />\n        <Route path=\"/contact\" component={ContactPage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n);\n\nexport default AppRouter;\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AASA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAtBA;AAAA;AACA;AADA;AAAA;AAAA;AAwBA;AACA;AAzBA;AA0BA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AANA;AACA;AASA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AACA;AAWA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAFA;AACA;AAKA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AASA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AAHA;AAcA;AACA;AACA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AANA;AACA;AASA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AANA;AACA;AASA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAdA;AACA;AAmBA;;;;A","sourceRoot":""}